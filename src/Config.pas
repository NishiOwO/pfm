unit Config;

interface
var
	ConfigFileAreaWidth : Integer;
	ConfigShowWelcome : Boolean;

procedure ConfigInit();
procedure ConfigImport(Path : String);
procedure ConfigExport(Path : String);

implementation
uses
	UserInterface,
	DOM,
	XMLRead,
	XMLWrite,
	Sysutils;

procedure ConfigSet(Node : TDOMNode; Key : String; Value : String);
begin
	TDOMElement(Node)[UnicodeString(Key)] := UnicodeString(Value);
end;

procedure ConfigSet(Node : TDOMNode; Key : String; Value : Integer);
begin
	ConfigSet(Node, Key, IntToStr(Value));
end;

procedure ConfigSet(Node : TDOMNode; Key : String; Value : Boolean);
begin
	ConfigSet(Node, Key, BoolToStr(Value, True));
end;

procedure ConfigInit();
begin
	ConfigFileAreaWidth := 20;
	ConfigShowWelcome := False;

	CreateDir(GetAppConfigDir(False));
	if not(FileExists(GetAppConfigDir(False) + 'config.xml')) then ConfigExport(GetAppConfigDir(False) + 'config.xml');
	ConfigImport(GetAppConfigDir(False) + 'config.xml');
end;

procedure ConfigUI(Node : TDOMNode);
var
	Child : TDOMNode;
	Element : TDOMElement;
begin
	Child := Node.FirstChild;
	while Assigned(Child) do
	begin
		Element := TDOMElement(Child);
		if Element.NodeName = 'FileArea' then
		begin
			if Element.HasAttribute('Width') then ConfigFileAreaWidth := StrToInt(String(Element['Width']));
		end
		else if Element.NodeName = 'Welcome' then
		begin
			if Element.HasAttribute('Show') then ConfigShowWelcome := StrToBool(String(Element['Show']));
		end;
		Child := Child.NextSibling;
	end;
end;

procedure ConfigKey(Node : TDOMNode);
begin
end;

procedure ConfigImport(Path : String);
var
	Doc : TXMLDocument;
	Root, Node : TDOMNode;
begin
	ReadXMLFile(Doc, Path);
	Root := Doc.DocumentElement;
	Node := Root.FirstChild;
	while Assigned(Node) do
	begin
		if Node.NodeName = 'UI' then ConfigUI(Node)
		else if Node.NodeName = 'Key' then ConfigKey(Node);
		Node := Node.NextSibling;
	end;
end;

procedure ConfigExport(Path : String);
var
	Doc : TXMLDocument;
	Root, UI, Key, Comment, Node : TDOMNode;
begin
	Doc := TXMLDocument.Create();

	Root := Doc.CreateElement('Config');

	Comment := Doc.CreateComment(UnicodeString(' Config generated by PFM version ' + UIVersion + ' '));
	Root.AppendChild(Comment);

	UI := Doc.CreateElement('UI');
	Node := Doc.CreateElement('FileArea');
	ConfigSet(Node, 'Width', ConfigFileAreaWidth);
	UI.AppendChild(Node);
	Node := Doc.CreateElement('Welcome');
	ConfigSet(Node, 'Show', ConfigShowWelcome);
	UI.AppendChild(Node);
	Root.AppendChild(UI);

	Key := Doc.CreateElement('Key');
	Root.AppendChild(Key);

	Doc.AppendChild(Root);

	WriteXMLFile(Doc, Path);
	Doc.Free();
end;

end.
